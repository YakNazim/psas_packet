===================
Message Definitions
===================

These are all the message types pre-defined in :code:`psas_packet.messages.MESSAGES`

ADIS
====

Raw data from the `Analog Devices ADIS16405 9DOF IMU <http://www.analog.com/en/products/sensors/isensor-mems-inertial-measurement-units/adis16405.html>`_. Includes acceleration, gyroscope, magnetometer, and temperature data.

**Format Description:**

+---------+--------------------------------------+------------------+--------------+
|   Field |                          Description |             Type | Size [Bytes] |
+=========+======================================+==================+==============+
|     VCC |                          Bus voltage | :code:`uint16_t` |            2 |
+---------+--------------------------------------+------------------+--------------+
|  Gyro_X | **X axis** value from rate-gyroscope | :code:`uint16_t` |            2 |
+---------+--------------------------------------+------------------+--------------+
|  Gyro_Y | **Y axis** value from rate-gyroscope | :code:`uint16_t` |            2 |
+---------+--------------------------------------+------------------+--------------+
|  Gyro_Z | **Z axis** value from rate-gyroscope | :code:`uint16_t` |            2 |
+---------+--------------------------------------+------------------+--------------+
|   Acc_X |  **X axis** value from accelerometer | :code:`uint16_t` |            2 |
+---------+--------------------------------------+------------------+--------------+
|   Acc_Y |  **Y axis** value from accelerometer | :code:`uint16_t` |            2 |
+---------+--------------------------------------+------------------+--------------+
|   Acc_Z |  **Z axis** value from accelerometer | :code:`uint16_t` |            2 |
+---------+--------------------------------------+------------------+--------------+
|  Magn_X |   **X axis** value from magnetometer | :code:`uint16_t` |            2 |
+---------+--------------------------------------+------------------+--------------+
|  Magn_Y |   **Y axis** value from magnetometer | :code:`uint16_t` |            2 |
+---------+--------------------------------------+------------------+--------------+
|  Magn_Z |   **Z axis** value from magnetometer | :code:`uint16_t` |            2 |
+---------+--------------------------------------+------------------+--------------+
|    Temp |                     Unit temperature | :code:`uint16_t` |            2 |
+---------+--------------------------------------+------------------+--------------+
| Aux_ADC |                        Auxiliary ADC | :code:`uint16_t` |            2 |
+---------+--------------------------------------+------------------+--------------+


--------------------------------------------------------------------------------


FCFH
====

Flight comptuer health

**Format Description:**

+-----------------------+----------------+------------------+--------------+
|                 Field |    Description |             Type | Size [Bytes] |
+=======================+================+==================+==============+
|              CPU_User |       CPU User |    :code:`float` |            4 |
+-----------------------+----------------+------------------+--------------+
|            CPU_System |            CPU |    :code:`float` |            4 |
+-----------------------+----------------+------------------+--------------+
|              CPU_Nice |            CPU |    :code:`float` |            4 |
+-----------------------+----------------+------------------+--------------+
|            CPU_IOWait |            CPU |    :code:`float` |            4 |
+-----------------------+----------------+------------------+--------------+
|               CPU_IRQ |            CPU |    :code:`float` |            4 |
+-----------------------+----------------+------------------+--------------+
|           CPU_SoftIRQ |            CPU |    :code:`float` |            4 |
+-----------------------+----------------+------------------+--------------+
|              RAM_Used |            RAM | :code:`uint64_t` |            8 |
+-----------------------+----------------+------------------+--------------+
|            RAM_Buffer |            RAM | :code:`uint64_t` |            8 |
+-----------------------+----------------+------------------+--------------+
|            RAM_Cached |            RAM | :code:`uint64_t` |            8 |
+-----------------------+----------------+------------------+--------------+
|                   PID | Number of PIDs | :code:`uint16_t` |            2 |
+-----------------------+----------------+------------------+--------------+
|             Disk_Used |           Disk | :code:`uint64_t` |            8 |
+-----------------------+----------------+------------------+--------------+
|           Disk_Buffer |           Disk | :code:`uint64_t` |            8 |
+-----------------------+----------------+------------------+--------------+
|           Disk_Cached |           Disk | :code:`uint64_t` |            8 |
+-----------------------+----------------+------------------+--------------+
|      IO_lo_Bytes_Sent |   IO localhost | :code:`uint32_t` |            4 |
+-----------------------+----------------+------------------+--------------+
|      IO_lo_Bytes_Recv |   IO localhost | :code:`uint32_t` |            4 |
+-----------------------+----------------+------------------+--------------+
|    IO_lo_Packets_Sent |   IO localhost | :code:`uint32_t` |            4 |
+-----------------------+----------------+------------------+--------------+
|    IO_lo_Packets_Recv |   IO localhost | :code:`uint32_t` |            4 |
+-----------------------+----------------+------------------+--------------+
|    IO_eth0_Bytes_Sent |        IO eth0 | :code:`uint32_t` |            4 |
+-----------------------+----------------+------------------+--------------+
|    IO_eth0_Bytes_Recv |        IO eth0 | :code:`uint32_t` |            4 |
+-----------------------+----------------+------------------+--------------+
|  IO_eth0_Packets_Sent |        IO eth0 | :code:`uint32_t` |            4 |
+-----------------------+----------------+------------------+--------------+
|  IO_eth0_Packets_Recv |        IO eth0 | :code:`uint32_t` |            4 |
+-----------------------+----------------+------------------+--------------+
|   IO_wlan0_Bytes_Sent |       IO wlan0 | :code:`uint32_t` |            4 |
+-----------------------+----------------+------------------+--------------+
|   IO_wlan0_Bytes_Recv |       IO wlan0 | :code:`uint32_t` |            4 |
+-----------------------+----------------+------------------+--------------+
| IO_wlan0_Packets_Sent |       IO wlan0 | :code:`uint32_t` |            4 |
+-----------------------+----------------+------------------+--------------+
| IO_wlan0_Packets_Recv |       IO wlan0 | :code:`uint32_t` |            4 |
+-----------------------+----------------+------------------+--------------+
|             Core_Temp |      Core Temp | :code:`uint16_t` |            2 |
+-----------------------+----------------+------------------+--------------+


--------------------------------------------------------------------------------


RNHH
====

Battery and power information from the Rocket Net Hub

**Format Description:**

+----------------+------------------------------+------------------+--------------+
|          Field |                  Description |             Type | Size [Bytes] |
+================+==============================+==================+==============+
|    Temperature |                 Battery temp | :code:`uint16_t` |            2 |
+----------------+------------------------------+------------------+--------------+
| TS1Temperature |                 Battery temp |  :code:`int16_t` |            2 |
+----------------+------------------------------+------------------+--------------+
| TS2Temperature |                 Battery temp |  :code:`int16_t` |            2 |
+----------------+------------------------------+------------------+--------------+
|      TempRange |                 Battery temp | :code:`uint16_t` |            2 |
+----------------+------------------------------+------------------+--------------+
|        Voltage |                      Voltage | :code:`uint16_t` |            2 |
+----------------+------------------------------+------------------+--------------+
|        Current |                      Current |  :code:`int16_t` |            2 |
+----------------+------------------------------+------------------+--------------+
| AverageCurrent |              Average Current |  :code:`int16_t` |            2 |
+----------------+------------------------------+------------------+--------------+
|   CellVoltage1 |       Battery Cell 1 Voltage | :code:`uint16_t` |            2 |
+----------------+------------------------------+------------------+--------------+
|   CellVoltage2 |       Battery Cell 2 Voltage | :code:`uint16_t` |            2 |
+----------------+------------------------------+------------------+--------------+
|   CellVoltage3 |       Battery Cell 3 Voltage | :code:`uint16_t` |            2 |
+----------------+------------------------------+------------------+--------------+
|   CellVoltage4 |       Battery Cell 4 Voltage | :code:`uint16_t` |            2 |
+----------------+------------------------------+------------------+--------------+
|    PackVoltage |         Battery Pack Voltage | :code:`uint16_t` |            2 |
+----------------+------------------------------+------------------+--------------+
| AverageVoltage | Battery Pack Average Voltage | :code:`uint16_t` |            2 |
+----------------+------------------------------+------------------+--------------+


--------------------------------------------------------------------------------


RNHP
====

Port power usage

**Format Description:**

+-----------+-------------+------------------+--------------+
|     Field | Description |             Type | Size [Bytes] |
+===========+=============+==================+==============+
|     Port1 |      Port 1 | :code:`uint16_t` |            2 |
+-----------+-------------+------------------+--------------+
|     Port2 |      Port 2 | :code:`uint16_t` |            2 |
+-----------+-------------+------------------+--------------+
|     Port3 |      Port 3 | :code:`uint16_t` |            2 |
+-----------+-------------+------------------+--------------+
|     Port4 |      Port 4 | :code:`uint16_t` |            2 |
+-----------+-------------+------------------+--------------+
| Umbilical |   Umbilical | :code:`uint16_t` |            2 |
+-----------+-------------+------------------+--------------+
|     Port6 |      Port 6 | :code:`uint16_t` |            2 |
+-----------+-------------+------------------+--------------+
|     Port7 |      Port 7 | :code:`uint16_t` |            2 |
+-----------+-------------+------------------+--------------+
|     Port8 |      Port 8 | :code:`uint16_t` |            2 |
+-----------+-------------+------------------+--------------+


--------------------------------------------------------------------------------


RNHU
====

Umbiilical Detect

**Format Description:**

+--------+-------------+-----------------+--------------+
|  Field | Description |            Type | Size [Bytes] |
+========+=============+=================+==============+
| Detect |      Detect | :code:`uint8_t` |            1 |
+--------+-------------+-----------------+--------------+


--------------------------------------------------------------------------------


ROLL
====

Roll servo positon

**Format Description:**

+---------+---------------------+-----------------+--------------+
|   Field |         Description |            Type | Size [Bytes] |
+=========+=====================+=================+==============+
|   Angle |           Fin angle |  :code:`double` |            8 |
+---------+---------------------+-----------------+--------------+
| Disable | Enable/disable flag | :code:`uint8_t` |            1 |
+---------+---------------------+-----------------+--------------+


--------------------------------------------------------------------------------


SEQN
====

Sequence Number

**Format Description:**

+----------+-------------+------------------+--------------+
|    Field | Description |             Type | Size [Bytes] |
+==========+=============+==================+==============+
| Sequence |    Sequence | :code:`uint32_t` |            4 |
+----------+-------------+------------------+--------------+


--------------------------------------------------------------------------------


